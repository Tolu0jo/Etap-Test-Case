// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id
  phoneNumber   String        @unique
  password_hash String
  salt          String
  isAdmin       Boolean       @default(false)
  wallets       Wallet[]
  transactions  Transaction[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}

model Wallet {
  id                   String        @id
  currency             String
  balance              Float         @default(0)
  user                 User          @relation(fields: [userId], references: [id])
  userId               String
  sentTransactions     Transaction[] @relation("FromWallet")
  receivedTransactions Transaction[] @relation("ToWallet")
  createdAt            DateTime      @default(now())
  updatedAt            DateTime      @updatedAt
}

model Transaction {
  id               String   @id
  amount           Float    @default(0)
  senderWallet     Wallet   @relation("FromWallet", fields: [senderWalletId], references: [id])
  senderWalletId   String
  recieverWallet   Wallet   @relation("ToWallet", fields: [recieverWalletId], references: [id])
  recieverWalletId String
  approvedBy       Admin?   @relation("Approval", fields: [approvedById], references: [id])
  approvedById     String?
  user             User     @relation(fields: [userId], references: [id])
  userId           String
  status           String  @default("APPROVED")
  createdAt        DateTime @default(now())
}

model Admin {
  id                   String           @id
  phoneNumber          String           @unique
  password_hash        String
  salt                 String
  isAdmin              Boolean          @default(true)
  approvedTransactions Transaction[]    @relation("Approval")
}

model PaymentDetails {
  id          String    @id
  createdAt   DateTime @default(now())
  walletId    String 
  userId      String
  currency    String
  amount      Float
  pstackId    Float   
  WalletBallance Float
}

model PaymentSummary {
  id         Int       @id @default(autoincrement())
  month      Int        @default(0)
  year       Int        @default(0)
  totalPayments Int     @default(0)
  successfulPayments Int  @default(0)
  pendingPayments Int    @default(0)
  createdAt  DateTime  @default(now())
}